[{"title":"leetcode-200.岛屿数量","date":"2019-11-20T04:55:59.000Z","path":"2019/11/20/leetcode-200.岛屿数量/","text":"本质上就是求图的连通分量的个数。利用栈实现图的遍历。没有使用图的递归 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071import java.util.Scanner;import java.util.Stack;public class Main &#123; static class Node &#123; int x; int y; int value; public Node(int x, int y, int value) &#123; this.x = x; this.y = y; this.value = value; &#125; &#125; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); int m = sc.nextInt(); int n = sc.nextInt(); int[][] map = new int[m][n]; int[][] visited = new int[m][n]; for (int i = 0; i &lt; m; i++) &#123; for (int j = 0; j &lt; n; j++) &#123; map[i][j] = sc.nextInt(); visited[i][j] = 0; &#125; &#125; int count = 0; for (int i = 0; i &lt; m; i++) &#123; for (int j = 0; j &lt; n; j++) &#123; if (visited[i][j] != 1 &amp;&amp; map[i][j] == 1) &#123; count++; visited[i][j] = 1; Node beginNode = new Node(i, j, map[i][j]); Stack&lt;Node&gt; stack = new Stack&lt;&gt;(); stack.push(beginNode); while (!stack.isEmpty()) &#123; Node node = stack.peek(); // 下 if (node.x + 1 &lt; m &amp;&amp; map[node.x + 1][node.y] == 1 &amp;&amp; visited[node.x + 1][node.y] == 0) &#123; visited[node.x + 1][node.y] = 1; Node node1 = new Node(node.x + 1, node.y, 1); stack.push(node1); // 右 &#125; else if (node.y + 1 &lt; n &amp;&amp; map[node.x][node.y + 1] == 1 &amp;&amp; visited[node.x][node.y + 1] == 0) &#123; visited[node.x][node.y + 1] = 1; Node node1 = new Node(node.x, node.y + 1, 1); stack.push(node1); // 上 &#125; else if (node.x - 1 &gt;= 0 &amp;&amp; map[node.x - 1][node.y] == 1 &amp;&amp; visited[node.x - 1][node.y] == 0) &#123; visited[node.x - 1][node.y] = 1; Node node1 = new Node(node.x - 1, node.y, 1); stack.push(node1); // 左 &#125; else if (node.y - 1 &gt;= 0 &amp;&amp; map[node.x][node.y - 1] == 1 &amp;&amp; visited[node.x][node.y - 1] == 0) &#123; visited[node.x][node.y - 1] = 1; Node node1 = new Node(node.x, node.y - 1, 1); stack.push(node1); &#125; else &#123; stack.pop(); &#125; &#125; &#125; &#125; &#125; System.out.println(count); &#125;&#125;","tags":[{"name":"leetcode","slug":"leetcode","permalink":"http://yoursite.com/tags/leetcode/"}]},{"title":"Hello World","date":"2019-11-17T10:40:14.237Z","path":"2019/11/17/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]